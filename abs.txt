import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;

import java.io.IOException;

public class SalesDataAnalysis {

    public static class SalesMapper extends Mapper<Object, Text, Text, IntWritable> {
        private final static IntWritable one = new IntWritable(1);
        private Text country = new Text();

        @Override
        protected void map(Object key, Text value, Context context) throws IOException, InterruptedException {
            // In ra dòng đang xử lý
            System.out.println("Processing line: " + value.toString());
            
            String[] fields = value.toString().split(",");
            if (fields.length > 6) {
                String countryName = fields[6].trim();
                country.set(countryName);
                context.write(country, one);
            }
        }
    }

    public static class SalesReducer extends Reducer<Text, IntWritable, Text, IntWritable> {
        private IntWritable result = new IntWritable();

        @Override
        protected void reduce(Text key, Iterable<IntWritable> values, Context context)
                throws IOException, InterruptedException {
            int sum = 0;
            for (IntWritable val : values) {
                sum += val.get();
            }
            result.set(sum);
            context.write(key, result);
        }
    }

    public static void main(String[] args) throws Exception {
        if (args.length != 2) {
            System.err.println("Usage: SalesDataAnalysis <input path> <output path>");
            System.exit(-1);
        }

        Configuration conf = new Configuration();
        Job job = Job.getInstance(conf, "Sales Data Analysis");

        job.setJarByClass(SalesDataAnalysis.class);
        job.setMapperClass(SalesMapper.class);
        job.setReducerClass(SalesReducer.class);

        job.setOutputKeyClass(Text.class);
        job.setOutputValueClass(IntWritable.class);

        // Đọc đường dẫn đầu vào và đầu ra từ tham số
        FileInputFormat.addInputPath(job, new Path(args[0])); // Đường dẫn đến SalesJan2009.csv
        FileOutputFormat.setOutputPath(job, new Path(args[1])); // Thư mục đầu ra

        // Chạy job và thoát
        System.exit(job.waitForCompletion(true) ? 0 : 1);
    }
}
